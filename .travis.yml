language: rust
sudo: false
dist: xenial

matrix:
  include:
    # Linux 64bit
    - env: MANYLINUX=0
      os: linux
      rust: stable
      compiler: gcc
    - env: MANYLINUX=1
      os: linux
      rust: stable
      compiler: gcc
    #TODO: unlock when libglfw3 on Ubuntu comes with Vulkan support
    # or when we add a GL backend.
    #- os: linux
    #  rust: nightly
    #  compiler: gcc
    # Windows 64bit
    - os: windows
      rust: stable
    - os: windows
      rust: nightly
    - os: windows
      rust: stable
      env: ARCH=32
    - os: windows
      rust: nightly
      env: ARCH=32

    # macOS 64bit
    - env: MACOSX_DEPLOYMENT_TARGET=10.9
      os: osx
      rust: stable
      osx_image: xcode9.4
      compiler: clang
    - env: MACOSX_DEPLOYMENT_TARGET=10.9
      os: osx
      rust: nightly
      osx_image: xcode9.4
      compiler: clang

    # iPhoneOS 64bit
    - env: TARGET=aarch64-apple-ios
      os: osx
      osx_image: xcode11
      rust: stable

addons:
  apt:
    packages:
    - cmake
    - libglfw3-dev
  homebrew:
    update: true
    packages:
    - cmake
    - glfw3

branches:
  except:
  - staging.tmp

before_install:
- if [[ $TRAVIS_OS_NAME == "windows" ]]; then choco install make; fi
- if [[ $TRAVIS_RUST_VERSION != "nightly" ]] && [[ $ARCH != "32" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then rustup default stable-msvc; fi
- if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $ARCH != "32" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then rustup default nightly-msvc; fi
- if [[ $TRAVIS_RUST_VERSION != "nightly" ]] && [[ $ARCH == "32" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then rustup default stable-i686-pc-windows-msvc; fi
- if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $ARCH == "32" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then rustup default nightly-i686-pc-windows-msvc; fi

script:
  - if [[ $MANYLINUX != "1" ]]; then cargo test; fi
  # TODO: enable GL backend
  - if [[ $MANYLINUX != "1" ]]; then (cd wgpu-core && cargo check --all-features); fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then (cd wgpu-native && cargo check --features vulkan-portability); fi
  - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $MANYLINUX != "1" ]]; then cargo check --release; fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $MANYLINUX != "1" ]]; then cargo +nightly install cbindgen; fi
  - if [[ $TRAVIS_OS_NAME == "windows" ]] && [[ $ARCH != "32" ]]; then
      export GENERATOR_PLATFORM=-DCMAKE_GENERATOR_PLATFORM=x64;
    else
      export GENERATOR_PLATFORM=;
    fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then
      wget -nc -O glfw.zip https://github.com/glfw/glfw/archive/3.3.zip &&
      7z x glfw.zip -oglfw &&
      cd glfw/glfw-3.3 &&
      export GLFW3_INCLUDE_DIR=`pwd`/include &&
      export GLFW3_INSTALL_DIR=`pwd`/install &&
      cmake . -DCMAKE_INSTALL_PREFIX=$GLFW3_INSTALL_DIR $GENERATOR_PLATFORM &&
      cmake --build . --target install &&
      cd ../.. &&
      export CMAKE_PREFIX_PATH=$GLFW3_INSTALL_DIR &&
      make example-compute example-triangle VERBOSE=1;
    fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $TRAVIS_OS_NAME != "windows" ]] && [[ $MANYLINUX != "1" ]]; then make VERBOSE=1; fi
  - if [[ $TRAVIS_RUST_VERSION == "stable" ]] && [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $MANYLINUX == "1" ]]; then
      make manylinux;
    elif [[ $TRAVIS_RUST_VERSION == "stable" ]]; then
      make package;
    fi

deploy:
  provider: releases
  api_key:
    secure: en8p8ejLUCas53qON+gQnhl/ZNkAkqOOCnWP853wngrsgLe9zZKS0JME2mkSqu5v0xo0A3WPx2u8fUCDFILca2li2UgE78JNguEJJ6P/veZ4kgwHsTdUEiww89unf+4xPB7ZWTbgUc4ShtYRZh/glUiYwFj2s1DI7czmVWrqOK92G26Eh1Dc+JN+d/DzRVaArPfmVQqYSuu2495pmkHfm7AgS80SAqMg8vZsu9xaRGr4CeeKAoyVUFMbCorMGXmkai2Jr2ROxbgm6xKmLLPCHAAmCjdi7XDPJIAihFmYs/GNQTtzI7P7EB6KuyIYBbrlg8t0YpA6VN+050EjGJXsGvsqmHh9epNt9Gqq9xZGLF+Pv5gVsK+fv+jCJ78D7z71iZ7mw0DH0eyZbOa+Js+1RXVaoF/3tJAV8teM4fq6FHJeoUGY4EgwynHzzzZh6ROFHH5GepdjxHeZztlqVQpsikchah/Ps/eCDPjxU/V+2nxeypdbp96JCXcZo+lX9p3hfEK4p9U6BcIAs+ZuogRT9v6OMGav5xDlpoxIzuvYLUW8A/3n6jp2h/zkPhZ1qE8b/MS/fa+xubs64ONPp2M+YVxZgXmpMMeE4s3b8YB63vYkj2xzFEOgJwK039vrSrucbBaU8kcheZqxJ4hLdVLfiTN5MOsnti39abI3j8OznVo=
  skip_cleanup: true
  overwrite: true
  file_glob: true
  file: dist/wgpu-*.zip
  on:
    repo: Korijn/wgpu
    tags: true
    condition: $TRAVIS_RUST_VERSION == "stable" && $TRAVIS_BRANCH == $TRAVIS_TAG && ${TRAVIS_TAG::1} == "v"
